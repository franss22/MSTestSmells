


        [TestMethod]
        public async Task DoubleDouble()
        {
            var testFile = @"DoubleDouble.cs";
            await new VerifyCS.Test
            {
                TestCode = testReader.ReadTest(testFolder, testFile),
                ExpectedDiagnostics = { },
                ReferenceAssemblies = UnitTestingAssembly
            }.RunAsync();
        }


        [TestMethod]
        public async Task DoubleDoubleL()
        {

            var testFile = @"DoubleDoubleL.cs";
            var expected2nd = VerifyCS.Diagnostic("MagicNumber").WithSpan(12, 32, 12, 36).WithArguments("AreEqual", "2.5d");
            await new VerifyCS.Test
            {
                TestCode = testReader.ReadTest(testFolder, testFile),
                ExpectedDiagnostics = { expected2nd },
                ReferenceAssemblies = UnitTestingAssembly
            }.RunAsync();
        }
        [TestMethod]
        public async Task DoubleLDouble()
        {

            var testFile = @"DoubleLDouble.cs";
            var expected1st = VerifyCS.Diagnostic("MagicNumber").WithSpan(12, 29, 12, 33).WithArguments("AreEqual", "1.5d");


            await new VerifyCS.Test
            {
                TestCode = testReader.ReadTest(testFolder, testFile),
                ExpectedDiagnostics = { expected1st },
                ReferenceAssemblies = UnitTestingAssembly
            }.RunAsync();
        }
        [TestMethod]
        public async Task DoubleLDoubleL()
        {

            var testFile = @"DoubleLDoubleL.cs";
            var expected1st = VerifyCS.Diagnostic("MagicNumber").WithSpan(12, 29, 12, 33).WithArguments("AreEqual", "1.5d");

            var expected2nd = VerifyCS.Diagnostic("MagicNumber").WithSpan(12, 35, 12, 39).WithArguments("AreEqual", "2.5d");

            await new VerifyCS.Test
            {
                TestCode = testReader.ReadTest(testFolder, testFile),
                ExpectedDiagnostics = { expected1st, expected2nd },
                ReferenceAssemblies = UnitTestingAssembly
            }.RunAsync();
        }

